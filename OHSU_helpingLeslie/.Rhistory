library(ggplot2)
gapminder &>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_point()
gapminder %>%
filter(gdpPercap < 50000) %>%
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_point()
geom_point()
ggplot(aes(x=gdpPercap, y=lifeExp, col=continent)+
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, col=continent))+
geom_point()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, col=continent))+
geom_point()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, col=continent))+
geom_point()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, col=continent))+
geom_point(alpha=0.3)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)
geom_smooth(method = lm)
geom_smooth(method = lm)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)
facet_wrap(~continent)
facet_wrap(~continent)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=continent, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)+
facet_wrap(~continent)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=years, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)+
facet_wrap(~continent)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=years, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)+
facet_wrap(~continent)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=year, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)+
facet_wrap(~continent)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=year, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)+
facet_wrap(y ~ continent)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap), y=lifeExp, col=year, size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)+
facet_wrap(~continent)
lm(lifeExp ~ gdpPercap)
summarise()
summary(lm(lifeExp ~ gdpPercap))
summary(lm(lifeExp ~ gdpPercap+pop))
install.packages("devtools")
library("devtools")
devtools::install_github("benjjneb/dada2", ref="v1.16") # change the ref argument to get other versions
install.packages("tidyverse")
installr
install.packages("installr"")
install.packages("installr"
install.packages("installr")
library(installr)
updateR()
updateR()
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
install.packages("devtools")
BiocManager::install(version = "3.12")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
.libPaths()
install.packages(c("PKG1", "PKG2", "PKG3"))
install.packages(c("biomanager"))
install.packages(c("biocmanager"))
library(dada2)
library(dada2); packageVersion("dada2")
qp1.1$counts <- convert(y = as.numeric(qp1.1$Ct), b = ab1[1], a = ab1[2])
convert <- function(y, b, a){
x <- 10^((y - b) / a)
x
}
qp1.1$counts <- convert(y = as.numeric(qp1.1$Ct), b = ab1[1], a = ab1[2])
qp1.1$counts <- convert(y = as.numeric(qp1.1$Ct), b = ab1[1], a = ab1[2])
qp1 <- read.csv("C:/Program Files/RStudio/R/Data/qPCR_Tutorial-master/qPCR_Tutorial-master/PMATest_data.csv",
header = T, skip = 7, stringsAsFactors = F)
qp1[qp1 == "Undetermined"] <- NA
qp1.1 <- qp1 %>%
dplyr::group_by(Sample.Name) %>% #, run) %>%
dplyr::summarise(Ct = mean(as.numeric(as.character(Ct)))) %>%
as.data.frame()
standards1 <- qp1.1[grepl('Standard' , qp1.1$Sample),]
qp1.1 <- qp1.1[!grepl('Standard', qp1.1$Sample), ]
qp1 <- read.csv("C:/Program Files/RStudio/R/Data/qPCR_Tutorial-master/qPCR_Tutorial-master/PMATest_data.csv",
header = T, skip = 7, stringsAsFactors = F)
qp1[qp1 == "Undetermined"] <- NA
qp1.1 <- qp1 %>%
dplyr::group_by(Sample.Name) %>% #, run) %>%
dplyr::summarise(Ct = mean(as.numeric(as.character(Ct)))) %>%
as.data.frame()
library(dplyr)
library(dada2); packageVersion("dada2")
library(ggplot2)
qp1 <- read.csv("C:/Program Files/RStudio/R/Data/qPCR_Tutorial-master/qPCR_Tutorial-master/PMATest_data.csv",
header = T, skip = 7, stringsAsFactors = F)
qp1[qp1 == "Undetermined"] <- NA
qp1.1 <- qp1 %>%
dplyr::group_by(Sample.Name) %>% #, run) %>%
dplyr::summarise(Ct = mean(as.numeric(as.character(Ct)))) %>%
as.data.frame()
standards1 <- qp1.1[grepl('Standard' , qp1.1$Sample),]
qp1.1 <- qp1.1[!grepl('Standard', qp1.1$Sample), ]
dil <- c(1,
.1,
.01,
.001,
.0001,
.00001,
.000001)
standards1 <- cbind(standards1, dil)
copy.1 <- c(354287400,
35428740,
3542874,
354287.4,
35428.74,
3542.874,
354.2874)
dat1 <- data.frame('Sample'= standards1$Sample, 'copy' =
copy.1, 'log.copy' = log10(copy.1), 'Ct' = standards1$Ct)
fit1 <- lm(Ct ~ log.copy, data = dat1)
line1 <- lm(Ct ~ log.copy, data = dat1)
ab1 <- coef(line1)
ggplot(dat1, aes(x = log.copy, y = Ct, colour= Sample)) +
theme_classic() +
xlab(expression('C'['T'])) +
labs(subtitle = paste("Adj R2 =
",signif(summary(fit1)$adj.r.squared, 5),
"Intercept =", signif(fit1$coef[[1]],5
),
" Slope =",signif(fit1$coef[[2]], 5),
" P =",signif(summary(fit1)$coef[2,4],
5))) +
geom_point(size = 2) +
geom_line(aes(group=as.factor(Sample))) +
stat_smooth(method = 'lm', formula = y ~ x, level = 0, size
ggplot(dat1, aes(x = log.copy, y = Ct, colour= Sample)) +
theme_classic() +
xlab(expression('C'['T'])) +
labs(subtitle = paste("Adj R2 =
",signif(summary(fit1)$adj.r.squared, 5),
"Intercept =", signif(fit1$coef[[1]],5
),
" Slope =",signif(fit1$coef[[2]], 5),
" P =",signif(summary(fit1)$coef[2,4],
5))) +
geom_point(size = 2) +
geom_line(aes(group=as.factor(Sample))) +
stat_smooth(method = 'lm', formula = y ~ x, level = 0, size
convert <- function(y, b, a){
x <- 10^((y - b) / a)
x
}
ggplot(dat1, aes(x = log.copy, y = Ct, colour= Sample)) +
theme_classic() +
xlab(expression('C'['T'])) +
labs(subtitle = paste("Adj R2 =
",signif(summary(fit1)$adj.r.squared, 5),
"Intercept =", signif(fit1$coef[[1]],5
),
" Slope =",signif(fit1$coef[[2]], 5),
" P =",signif(summary(fit1)$coef[2,4],
5))) +
geom_point(size = 2) +
geom_line(aes(group=as.factor(Sample))) +
stat_smooth(method = 'lm', formula = y ~ x, level = 0, size
ggplot(dat1, aes(x = log.copy, y = Ct, colour= Sample)) +
theme_classic() +
xlab(expression('C'['T'])) +
labs(subtitle = paste("Adj R2 =
",signif(summary(fit1)$adj.r.squared, 5),
"Intercept =", signif(fit1$coef[[1]],5
),
" Slope =",signif(fit1$coef[[2]], 5),
" P =",signif(summary(fit1)$coef[2,4],
5))) +
geom_point(size = 2) +
geom_line(aes(group=as.factor(Sample))) +
stat_smooth(method = 'lm', formula = y ~ x, level = 0, size
convert <- function(y, b, a){
x <- 10^((y - b) / a)
x
}
convert <- function(y, b, a){
x <- 10^((y - b) / a)
x
}
qp1.1$counts <- convert(y = as.numeric(qp1.1$Ct), b = ab1[1], a = ab1[2])
NTC.1 <- qp1.1[grepl('ntc', qp1.1$Sample), ]
NTC.1 <- as.numeric(NTC.1$counts)
[1] 1.458381
NTC. 1
NTC.1
[1] 1.458381
[1] 1.458381
NTC.1[1] 1.458381
NTC.1,
[1] 1.458381
NTC.1,
[1] 1.458381
NTC.1
[1] 1.458381
NTC.1[1] 1.458381
NTC.1 [1] 1.458381
NTC.1
NTC.1
ggplot(dat1, aes(x = log.copy, y = Ct, colour= Sample)) +
theme_classic() +
xlab(expression('C'['T'])) +
labs(subtitle = paste("Adj R2 =
",signif(summary(fit1)$adj.r.squared, 5),
"Intercept =", signif(fit1$coef[[1]],5
),
" Slope =",signif(fit1$coef[[2]], 5),
" P =",signif(summary(fit1)$coef[2,4],
5))) +
geom_point(size = 2) +
geom_line(aes(group=as.factor(Sample))) +
stat_smooth(method = 'lm', formula = y ~ x, level = 0, size
qp1 <- read.csv("C:/Program Files/RStudio/R/Data/qPCR_Tutorial-master/qPCR_Tutorial-master/PMATest_data.csv",
header = T, skip = 7, stringsAsFactors = F)
library(dada2); packageVersion("dada2")
library(dplyr)
library(ggplot2)
qp1 <- read.csv("C:/Program Files/RStudio/R/Data/qPCR_Tutorial-master/qPCR_Tutorial-master/PMATest_data.csv",
header = T, skip = 7, stringsAsFactors = F)
qp1[qp1 == "Undetermined"] <- NA
qp1.1 <- qp1 %>%
dplyr::group_by(Sample.Name) %>% #, run) %>%
dplyr::summarise(Ct = mean(as.numeric(as.character(Ct)))) %>%
as.data.frame()
standards1 <- qp1.1[grepl('Standard' , qp1.1$Sample),]
qp1.1 <- qp1.1[!grepl('Standard', qp1.1$Sample), ]
dil <- c(1,
.1,
.01,
.001,
.0001,
.00001,
.000001)
standards1 <- cbind(standards1, dil)
copy.1 <- c(354287400,
35428740,
3542874,
354287.4,
35428.74,
3542.874,
354.2874)
dat1 <- data.frame('Sample'= standards1$Sample, 'copy' =
copy.1, 'log.copy' = log10(copy.1), 'Ct' = standards1$Ct)
fit1 <- lm(Ct ~ log.copy, data = dat1)
line1 <- lm(Ct ~ log.copy, data = dat1)
ab1 <- coef(line1)
ggplot(dat1, aes(x = log.copy, y = Ct, colour= Sample)) +
theme_classic() +
xlab(expression('C'['T'])) +
labs(subtitle = paste("Adj R2 =
",signif(summary(fit1)$adj.r.squared, 5),
"Intercept =", signif(fit1$coef[[1]],5
),
" Slope =",signif(fit1$coef[[2]], 5),
" P =",signif(summary(fit1)$coef[2,4],
5))) +
geom_point(size = 2) +
geom_line(aes(group=as.factor(Sample))) +
stat_smooth(method = 'lm', formula = y ~ x, level = 0, size
ggplot(dat1, aes(x = log.copy, y = Ct, colour= Sample)) +
theme_classic() +
xlab(expression('C'['T'])) +
labs(subtitle = paste("Adj R2 =
",signif(summary(fit1)$adj.r.squared, 5),
"Intercept =", signif(fit1$coef[[1]],5
),
" Slope =",signif(fit1$coef[[2]], 5),
" P =",signif(summary(fit1)$coef[2,4],
5))) +
geom_point(size = 2) +
geom_line(aes(group=as.factor(Sample))) +
stat_smooth(method = 'lm', formula = y ~ x, level = 0, size
convert <- function(y, b, a){
x <- 10^((y - b) / a)
x
}
convert <- function(y, b, a){
x <- 10^((y - b) / a)
x
}
qp1.1$counts <- convert(y = as.numeric(qp1.1$Ct), b = ab1[1], a = ab1[2])
NTC.1 <- qp1.1[grepl('ntc', qp1.1$Sample), ]
NTC.1 <- as.numeric(NTC.1$counts)
NTC.1
qp1.1
install.packages(phyloseq)
library(dada2)
library(dplyr)
library(ggplot2)
library(BiocManager)
install.packages("BiocManager")
install.packages("BiocManager")
library(BiocManager)
pseq = merge_phyloseq(pseq1_decontam, pseq2_decontam,
pseq3_decontam)
biomanager::install("phyloseq")
biocmanager::install("phyloseq")
BiocManager::install("phyloseq")
pseq = merge_phyloseq(pseq1_decontam, pseq2_decontam,
pseq3_decontam)
clean_seqs = as(otu_table(speq), "matrix")
pseq = merge_phyloseq(pseq1_decontam, pseq2_decontam,
pseq3_decontam)
library(phyloseq)
pseq = merge_phyloseq(pseq1_decontam, pseq2_decontam,
pseq3_decontam)
pseq = merge_phyloseq(pseq1_decontam, pseq2_decontam,
pseq3_decontam)
pseq = merge_phyloseq(pseq1_decontam, pseq2_decontam,
pseq3_decontam)
library(phyloseq)
pseq = merge_phyloseq(pseq1_decontam, pseq2_decontam,
pseq3_decontam)
BiocManager::install("decontam")
pseq = merge_phyloseq(pseq1_decontam, pseq2_decontam,
pseq3_decontam)
library(tidyverse)
library(dplyr)
library(ggplot2)
setwd("C:\Users\Andreas\OneDrive\Desktop\R\OHSU_helpingLeslie")
setwd("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie")
warddata <- read.csv("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie\\Copy of COVID_patient_data_OHSU_sorted_forR_v5.xlsx")
library(readxl)
warddata <- read_xlsx("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie\\Copy of COVID_patient_data_OHSU_sorted_forR_v5.xlsx")
View(warddata)
View(warddata)
colnames(warddata)
warddata$condition <- paste(data$ warddata$Com1, warddata$Com2)
warddata$condition <- paste(warddata$Com1, warddata$Com2)
warddata$condition <- paste(warddata$COM1, warddata$COM2)
View(warddata)
view(warddata)
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, , warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM20, warddata$COM11, warddata$COM12, warddata$COM13)
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM20, warddata$COM11, warddata$COM12, warddata$COM13)
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13)
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26)
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26)
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13)
view(wardata)
view(warddata)
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",")
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26, sep = ",")
view(warddata)
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",", na.omit(COM1))
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",", na.omit())
apply(dd2[, cols], 1, function(x) toString(na.omit(x)))
newdf <- apply(dd2[, cols], 1, function(x) toString(na.omit(x)))
newdf <- apply(wardata[, cols], 1, function(x) toString(na.omit(x)))
newdf <- apply(warddata[, cols], 1, function(x) toString(na.omit(x)))
newdf <- apply(warddata[, "COM1", "COM2"], 1, function(x) toString(na.omit(x)))
newdf <- apply(warddata[, "COM1", "COM2"], 1, function(x), toString(na.omit(x)))
newdf <- apply(warddata[, "COM1", "COM2"], 1, function(x) toString(na.omit(x)))
newdf <- apply(warddata[, "COM1", "COM2"], 1, function(x && y) toString(na.omit(x)))
newdf <- apply(warddata[, "COM1", "COM2"], 1, function(x) toString(na.omit(x)))
newdf <- apply(warddata[, "COM1", "COM2"], 2, function(x) toString(na.omit(x)))
warddata[is.na(warddata)] <- ""
mutate_all(warddata, ~replace(,.""))
mutate_all(warddata, ~replace(,""))
mutate_all(warddata, ~replace(.""))
mutate_all(warddata, ~replace(,.))
mutate_all(warddata, ~replace(,.))
mutate_all(warddata, ~replace_na(,.""))
mutate_all(warddata, ~replace_na(,.0))
mutate_all(warddata, ~replace_na(,. ))
mutate_all(warddata, ~replace_na(,. ))
warddata %>% replace(is.na(.), "")
colnames(warddata)
x[, 14:51][is.na(x[, 15:51])] <- ""
test <- warddata[, 14:51][is.na(warddata[, 15:51])] <- ""
test <- warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
View(warddata)
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",", na.omit())
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26, sep = ",")
view(warddata)
warddata <- warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",", na.omit())
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26, sep = ",")
view(warddata)
test <-warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
testdf <- warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
setwd("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie")
warddata <- read_xlsx("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie\\Copy of COVID_patient_data_OHSU_sorted_forR_v5.xlsx")
testdf <- warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
warddata <- read_xlsx("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie\\Copy of COVID_patient_data_OHSU_sorted_forR_v5.xlsx")
warddata <- warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",", na.omit())
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26, sep = ",")
view(warddata)
warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
warddata <- read_xlsx("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie\\Copy of COVID_patient_data_OHSU_sorted_forR_v5.xlsx")
warddata %>% replace(is.na(.), "")
warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",", na.omit())
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26, sep = ",")
view(warddata)
warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",", na.omit())
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26, sep = ",")
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",", na.omit())
warddata <- read_xlsx("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie\\Copy of COVID_patient_data_OHSU_sorted_forR_v5.xlsx")
warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",", na.omit())
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26, sep = ",")
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",", na.omit())
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13, sep = ",")
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26, sep = ",")
view(warddata)
warddata$condition <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13)
warddata$allcs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26)
view(warddata)
colnames(warddata)
setwd("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie")
warddata <- read_xlsx("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie\\Copy of COVID_patient_data_OHSU_sorted_forR_v5.xlsx")
warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
warddata$all_coms <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13)
warddata$all_cs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26)
ggplot(warddata, y = Ct_value, x = condition)
ggplot(warddata, y = Ct_value, x = condition) +
geom_point()
ggplot(warddata) +
geom_point( y = Ct_value, x = condition)
ggplot(warddata, y = Ct_value, x = condition) +
geom_point()
ggplot(warddata, y = Ct_value, x = all_coms) +
geom_point()
ggplot(warddata, aes(y = Ct_value, x = all_coms)) +
geom_point()
setwd("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie")
warddata <- read_xlsx("C:\\Users\\Andreas\\OneDrive\\Desktop\\R\\OHSU_helpingLeslie\\Copy of COVID_patient_data_OHSU_sorted_forR_v5.xlsx")
warddata[, 14:51][is.na(warddata[, 14:51])] <- ""
warddata$all_coms <- paste(warddata$COM1, warddata$COM2, warddata$COM3, warddata$COM4, warddata$COM5, warddata$COM6, warddata$COM7, warddata$COM8, warddata$COM9, warddata$COM10, warddata$COM11, warddata$COM12, warddata$COM13)
warddata$all_cs <- paste(warddata$CS1, warddata$CS2, warddata$CS3, warddata$CS4, warddata$CS5, warddata$CS6, warddata$CS7, warddata$CS8, warddata$CS9, warddata$CS10, warddata$CS11, warddata$CS12, warddata$CS13, warddata$CS14, warddata$CS15, warddata$CS16, warddata$CS17, warddata$CS18, warddata$CS19, warddata$CS20, warddata$CS21, warddata$CS22, warddata$CS23, warddata$CS24, warddata$CS25, warddata$CS26)
ggplot(warddata, aes(y = Ct_value, x = all_coms)) +
geom_point()
ggplot(aes(x = Day, y = Ct, group = Room.., color = blocksegment)) +
geom_point() +
geom_smooth(se = TRUE, method = 'loess', span = 0.9, show.legend = NA, color = 'seagreen')
ggplot(warddata, aes(y = Ct_value, x = all_coms)) +
geom_point()
?ggplot2
?geom_point
colnames(warddata)
ggplot(warddata, aes(y = Ct_Value, x = all_coms)) +
geom_point()
